#!/bin/bash
# Contains credentials
# This is a template file, save as simply .config.sh and set your own values below. Make it executable.

# Installing on Ubuntu or Mac
baseOS=Ubuntu
# !! Mac install is in an unfinished state and needs much more work
#baseOS=Mac

# Define the CycleStreets server name and e-mail for the VirtualHost
# Several option groups here, comment in / out as necessary
# Localhost
#csHostname=cyclestreets.localhost
#emailcontact=cyclestreets@localhost
# CycleStreets
csHostname=localhost
administratorEmail=webmaster@example.com
mainEmail="${administratorEmail}"

# API - subdomain use hyphen rather than dot for compatibiity with wildcard ssl certificates
apiHostname=api-"${csHostname}"

# Url for status api call for munin
muninUrlStub=http://${apiHostname}

# Tests api key
testsApiKey=

# Define the username for CycleStreets to install/run under, so that it can run independent of any individual personal account on the machine
# No spaces, all lower case, minimum five chars - so that can also be used as a cyclestreets sign in username.
username=cyclestreets
# Tip: If passwords contain a $ or other characters that need escaping, wrap them in single quotes or use backslashes.
password=

# Group, the user will be added to this group
rollout=rollout

# Password for cyclestreets@downloads.cyclestreets.net to download extra data
datapassword=

## MySQL
# The mysql root password - to avoid being prompted during installation.
mysqlRootPassword=

# Central PhpMyAdmin installation
phpmyadminMachine=

# Credentials for the website user
mysqlWebsiteUsername=website
mysqlWebsitePassword="${password}"

# Credentials for the import user
mysqlImportUsername=import
# Avoid using a % in this password because that won't survive being passed to version 0.43.1 of osmosis (this problem has been flagged with them)
mysqlImportPassword=

# MySQL settings for when the server is running an import or serving routes
# Values should be written as eg: 100*1024*1024
import_key_buffer_size=
import_max_heap_table_size=
import_tmp_table_size=

# Custom sudoers file
csSudoers=/etc/sudoers.d/cyclestreets

# A string used to encrypt user passwords
signinSalt=

# Credentials for the blog user (leave empty if not setting up a blog)
blogMoniker=
blogDatabasename=
blogUsername=
blogPassword=

## Working directories
websitesContentFolder=/websites/www/content
websitesBackupsFolder=/websites/www/backups
websitesLogsFolder=/websites/www/logs
importContentFolder=/websites/www/import

# Names the log containing journey api performance data (v1 api only)
journeysLog="${csHostname}-access.log"

# Names a mysql configuration file which gets setup to allow the CycleStreets user to run mysql commands (as the superuser) without supplying command line password; or empty to prevent its creation
mySuperCredFile=${websitesContentFolder}/.mySuperUserCredentials.cnf

# Useful binding
# The defaults-extra-file is a positional argument which must come first.
superMysql="mysql --defaults-extra-file=${mySuperCredFile} -hlocalhost"


## Exim4 (mailsending) configuration - see: http://newbiedoc.sourceforge.net/networking/exim.html#VERYSIMPLE

# Master setting that can turn off any configuration of exim
configureExim=false

# Basically, use the 'internet' (direct delivery) mode here for a developer setup
#!# Simplify this block to be a single setting like profile='developer'/'deployment' and write out settings (based on those below) accordingly
dc_eximconfig_configtype='internet'  # Use 'internet' for direct delivery, or 'satellite' if mail is delivered by your ISP
dc_local_interfaces=''               # Use '' if using 'internet' or '127.0.0.1' if using 'satellite' above
dc_readhost='cyclestreets.net'       # Set to 'cyclestreets.net'
dc_smarthost=''                      # Use '' if using 'internet' or 'mx.yourispmailhost.com' if using 'satellite' above


## Routing daemon
routingEngineConfigFile=${websitesContentFolder}/routingengine/.config.sh
routingDaemonLocation=/etc/init.d/cycleroutingd
routingDaemonRestart="/bin/systemctl restart cycleroutingd"
routingDaemonStatus="/bin/systemctl --no-pager status cycleroutingd"
routingDaemonStart="/bin/systemctl start cycleroutingd"
routingDaemonStop="/bin/systemctl stop cycleroutingd"
installRoutingAsDaemon=true
# Don't stop routing service during import by leaving this variable empty:
stopRoutingDuringImport=yes

## Local routing server
localRoutingUrl=http://localhost:9000/

## Specify the machine that provides backups of live data (used by backup and fallback-deployment)
liveMachineHostname=

## Controls syncing and restoration of recent route zips: true|false or empty
restoreRecentRoutes=

## Microsites server such as blogs
micrositesServer=

# An alternative machine that can provide routing services, especially during switch-routing-edition, should be full url including port, e.g. http://imports.cyclestreets.net:9000/
fallbackRoutingUrl=

# Fallback server
fallbackServer=

# Fallback deployment restores the cyclestreets database to one having this name
csFallbackDb=cyclestreets

# Tilecache
tilecacheHostname=tile.cyclestreets.net
tilecacheContentFolder=/websites/tile/content
tilecacheSSL=true

# Main mailserver
dc_other_hostnames=


# Import installation
# Options for installing the import - leave blank to skip these steps, or add string true to enable

# Elevation datasources - add to list (assuming source present on downloads server) or comment-out if not wanted, listed in priority order
elevationDatasources=(
#	'alos.tar.bz2'
#	'prague.tar.bz2'
#	'osterrain50.tar.bz2'
#	'srtm.tar.bz2'
#	'aster.tar.bz2'
)

# Archive db
archiveDb=

# External database (leave empty if not wanted)
externalDb=csExternal
csExternalDataFile=csExternal.sql.gz

# Batch database: csBatch (leave empty if not wanted)
batchDb=

## Optional component modules (leave empty if they are not wanted)

# Face recognition and number plate recognition
imageRecognitionComponent=

# Html to PDF
htmlToPdfComponent=1

# Potlatch
potlatchComponent=

# End of file
