#!/bin/bash
# Script to deploy CycleStreets dev server on Ubuntu
# Written for Ubuntu Server 16.04 LTS (View Ubuntu version using 'lsb_release -a')
# This script is idempotent - it can be safely re-run without destroying existing data

echo "#	CycleStreets Dev machine deployment $(date)"

# Ensure this script is run as root
if [ "$(id -u)" != "0" ]; then
    echo "#	This script must be run as root." 1>&2
    exit 1
fi

# Bomb out if something goes wrong
set -e

### CREDENTIALS ###

# Get the script directory see: http://stackoverflow.com/a/246128/180733
# The second single line solution from that page is probably good enough as it is unlikely that this script itself will be symlinked.
DIR="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Use this to remove the ../
ScriptHome=$(readlink -f "${DIR}/..")

# Name of the credentials file
configFile=${ScriptHome}/.config.sh

# Generate your own credentials file by copying from .config.sh.template
if [ ! -x ${configFile} ]; then
    echo "#	The config file, ${configFile}, does not exist or is not excutable - copy your own based on the ${configFile}.template file." 1>&2
    exit 1
fi

# Load the credentials
. ${configFile}

# Check a base OS has been defined
if [ -z "${baseOS}" ]; then
	echo "#     Please define a value for baseOS in the config file."
	exit 1
fi
echo "# Installing CycleStreets website for base OS: ${baseOS}"

# Install a base webserver machine with webserver software (Apache, PHP, MySQL), relevant users and main directory
. ${ScriptHome}/utility/installBaseWebserver.sh

# Enable mod_ssl for HTTPS sites
a2enmod ssl
service apache2 reload

# Add mod_macro to help simplify Apache configuration
apt-get -y install libapache2-mod-macro
a2enmod macro

# Install PhpMyAdmin non-interactively; see: http://stackoverflow.com/questions/22440298/preseeding-phpmyadmin-skip-multiselect-skip-password
apt-get install -y pwgen
AUTOGENERATED_PASS=`pwgen -c -1 20`
echo "phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2" | debconf-set-selections
echo "phpmyadmin phpmyadmin/dbconfig-install boolean true" | debconf-set-selections
echo "phpmyadmin phpmyadmin/mysql/admin-user string root" | debconf-set-selections
echo "phpmyadmin phpmyadmin/mysql/admin-pass password $mysqlRootPassword" | debconf-set-selections
echo "phpmyadmin phpmyadmin/mysql/app-pass password $AUTOGENERATED_PASS" |debconf-set-selections
echo "phpmyadmin phpmyadmin/app-password-confirm password $AUTOGENERATED_PASS" | debconf-set-selections
apt-get -y install phpmyadmin
phpenmod mcrypt
# Disable by default, as this will add to all VirtualHosts; instead, add the following to an Apache VirtualHost:
#  Include /etc/apache2/conf-available/phpmyadmin.conf
#  Alias / /usr/share/phpmyadmin/
a2disconf phpmyadmin
service apache2 reload

# Exim
# Mail Transfer Agent (MTA); NB load before Python otherwise Ubuntu will choose Postfix
# See: https://help.ubuntu.com/lts/serverguide/exim4.html and http://manpages.ubuntu.com/manpages/hardy/man8/update-exim4.conf.8.html
# NB The config here is currently Debian/Ubuntu-specific
apt-get -y install exim4
if [ ! -e /etc/exim4/update-exim4.conf.conf.original ]; then
	cp -pr /etc/exim4/update-exim4.conf.conf /etc/exim4/update-exim4.conf.conf.original
	# NB These will deliberately overwrite any existing config; it is assumed that once set, the config will only be changed via this setup script (as otherwise it is painful during testing)
	sed -i "s/dc_eximconfig_configtype=.*/dc_eximconfig_configtype='internet'/" /etc/exim4/update-exim4.conf.conf
	sed -i "s/dc_other_hostnames=.*/dc_other_hostnames='${dc_other_hostnames}'/" /etc/exim4/update-exim4.conf.conf
	sed -i "s/dc_local_interfaces=.*/dc_local_interfaces=''/" /etc/exim4/update-exim4.conf.conf
	update-exim4.conf
	service exim4 restart
fi

# Mailman; see: https://help.ubuntu.com/community/Mailman and https://github.com/eucalyptus/recipes/blob/master/bash/debian/mailman.sh
# Mailman core software:
echo 'mailman mailman/site_languages multiselect en' | debconf-set-selections
echo 'mailman mailman/gate_news boolean false' | debconf-set-selections
echo 'mailman mailman/default_server_language select en' | debconf-set-selections
echo 'mailman mailman/create_site_list note' | debconf-set-selections
apt-get -y install mailman
if [ ! -d /var/lib/mailman/lists/mailman ]; then
	AUTOGENERATED_PASS=`pwgen -c -1 20`
	/usr/lib/mailman/bin/newlist -q mailman mail@example.com $AUTOGENERATED_PASS
	sed -i -e "s|^DEFAULT_URL_PATTERN.*|DEFAULT_URL_PATTERN = 'https://%s/mailman/'|" /etc/mailman/mm_cfg.py
	sed -i -e "s|^DEFAULT_EMAIL_HOST.*|DEFAULT_EMAIL_HOST = 'lists.cyclestreets.net'|" /etc/mailman/mm_cfg.py
	sed -i -e "s|^DEFAULT_URL_HOST.*|DEFAULT_URL_HOST = 'lists.cyclestreets.net'|" /etc/mailman/mm_cfg.py
	# You can set the mailman site-wide password later, using `sudo mmsitepass`
fi
# Exim config
#   See: https://help.ubuntu.com/community/Mailman#Main
if [ ! -f /etc/exim4/conf.d/main/04_exim4-config_mailman ]; then
	cp -pr ${ScriptHome}/dev-deployment/mailman-04_exim4-config_mailman /etc/exim4/conf.d/main/04_exim4-config_mailman
fi
#    See: https://help.ubuntu.com/community/Mailman#Transport
if [ ! -f /etc/exim4/conf.d/transport/40_exim4-config_mailman ]; then
	cp -pr ${ScriptHome}/dev-deployment/mailman-40_exim4-config_mailman /etc/exim4/conf.d/transport/40_exim4-config_mailman
fi
#   See: https://help.ubuntu.com/community/Mailman#Router
if [ ! -f /etc/exim4/conf.d/router/101_exim4-config_mailman ]; then
	cp -pr ${ScriptHome}/dev-deployment/mailman-101_exim4-config_mailman /etc/exim4/conf.d/router/101_exim4-config_mailman
fi
update-exim4.conf
service exim4 restart
# Apache, creating a lists subdomain if not already present:
if [ ! -f /etc/apache2/sites-available/lists.conf ]; then
	a2enmod cgid
	cp -pr ${ScriptHome}/dev-deployment/mailman-apache.conf /etc/apache2/sites-available/lists.conf
	a2ensite lists
	service apache2 restart
fi
# Start mailman (if not already running)
service mailman start

# Wiki, using Wikimedia
# Uses the legoktm ppa, as the Ubuntu release packages are not kept patched: see: https://www.mediawiki.org/wiki/User:Legoktm/Packages and https://launchpad.net/~legoktm/+archive/ubuntu/mediawiki-lts
add-apt-repository -y ppa:legoktm/mediawiki-lts
apt-get update
apt-get install -y mediawiki
apt-get install -y php5-apcu
if [ ! -f /etc/apache2/sites-available/wiki.conf ]; then
	# cp -pr ${ScriptHome}/dev-deployment/wiki-apache.conf /etc/apache2/sites-available/wiki.conf
fi
a2ensite wiki
service apache2 restart
# Add MySQL credentials
AUTOGENERATED_PASS=`pwgen -c -1 20`
echo "Using password: ${AUTOGENERATED_PASS}"
mysql -u root -p${mysqlRootPassword} -e "CREATE DATABASE IF NOT EXISTS wiki;"
mysql -u root -p${mysqlRootPassword} -e "CREATE USER 'wiki'@'localhost' IDENTIFIED BY '${AUTOGENERATED_PASS}';"
mysql -u root -p${mysqlRootPassword} -e "GRANT ALL PRIVILEGES ON wiki.* TO 'wiki'@'localhost' WITH GRANT OPTION;"
mysql -u root -p${mysqlRootPassword} -e "FLUSH PRIVILEGES;"
# Add Auth_remoteuser plugin, at release REL1_27
if [ ! -d /var/lib/mediawiki/extensions/Auth_remoteuser ]; then
	git clone https://github.com/wikimedia/mediawiki-extensions-Auth_remoteuser.git /var/lib/mediawiki/extensions/Auth_remoteuser
	cd /var/lib/mediawiki/extensions/Auth_remoteuser
	git checkout 380dbbe709c37f17258b67156c4863a4ce25eb2e
fi

# Munin Server; see: https://www.digitalocean.com/community/tutorials/how-to-install-the-munin-monitoring-tool-on-ubuntu-14-04
apt-get install -y apache2-utils
apt-get install -y libcgi-fast-perl libapache2-mod-fcgid
a2enmod fcgid
apt-get install -y munin
# Disable by default, as this will add to all VirtualHosts; instead, add the following to an Apache VirtualHost:
#  Include /etc/apache2/conf-available/munin.conf
#  Alias / /var/cache/munin/www/
a2disconf munin
service apache2 reload

# Downloads area
. ${ScriptHome}/dev-deployment/install-downloads.sh

# Confirm end of script
echo -e "#	All now deployed $(date)"

# End of file
