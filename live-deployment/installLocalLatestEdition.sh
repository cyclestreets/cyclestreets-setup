#!/bin/bash
# Script to install CycleStreets latest routing edition on local machine.
#
# Run as the cyclestreets user (a check is peformed after the config file is loaded).
usage()
{
    cat << EOF
SYNOPSIS
	installLocalLatestEdition.sh -h [edition]

OPTIONS
	-h Show this message

ARGUMENTS
	[edition]
		Optional routing edition of the form routingYYMMDD
		If not provided the latest one is looked up from the importContentFolder.

DESCRIPTION
	Used on a server that provides both the live and import deployments. I.e. usually a developer machine.
	This script moves the files generated by the latest import run to the website data area so they can be used for routing.
	Afterwards use ./switch-routing-edition.sh to use the new edition.
EOF
}

# http://wiki.bash-hackers.org/howto/getopts_tutorial
# See install-routing-data for best example of using this
while getopts ":h" option ; do
    case ${option} in
        h) usage; exit ;;
	\?) echo "Invalid option: -$OPTARG" >&2 ; exit ;;
    esac
done


echo "#	$(date)	Install latest locally generated CycleStreets import routing edition"

# Ensure this script is NOT run as root
if [ "$(id -u)" = "0" ]; then
    echo "#	This script must not be be run as root." 1>&2
    exit 1
fi

# Bomb out if something goes wrong
set -e

# Lock directory
lockdir=/var/lock/cyclestreets
mkdir -p $lockdir

# Set a lock file; see: http://stackoverflow.com/questions/7057234/bash-flock-exit-if-cant-acquire-lock/7057385
(
	flock -n 9 || { echo '#	An import-install is already running' ; exit 1; }

### CREDENTIALS ###

# Get the script directory see: http://stackoverflow.com/a/246128/180733
# The second single line solution from that page is probably good enough as it is unlikely that this script itself will be symlinked.
DIR="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Use this to remove the ../
ScriptHome=$(readlink -f "${DIR}/..")

# Name of the credentials file
configFile=${ScriptHome}/.config.sh

# Generate your own credentials file by copying from .config.sh.template
if [ ! -x ${configFile} ]; then
    echo "#	The config file, ${configFile}, does not exist or is not executable - copy your own based on the ${configFile}.template file."
    exit 1
fi

# Load the credentials
. ${configFile}


## Main body of script

# Ensure this script is run as cyclestreets user
if [ ! "$(id -nu)" = "${username}" ]; then
    echo "#	This script must be run as user ${username}, rather than as $(id -nu)."
    exit 1
fi

# Check the import folder is defined
if [ -z "${importContentFolder}" ]; then
    echo "#	The import folder is not defined."
    exit 1
fi

# Useful binding
# The defaults-extra-file is a positional argument which must come first.
superMysql="mysql --defaults-extra-file=${mySuperCredFile} -hlocalhost"

# Check that the import finished correctly
if ! ${superMysql} --batch --skip-column-names -e "call importStatus()" cyclestreets | grep "valid\|cellOptimised" > /dev/null 2>&1
then
    echo "#	The import process did not complete. The routing service will not be started."
    exit 1
fi


### Determine latest import
# New routing editions should be found at this location
importMachineEditions=${importContentFolder}/output

# Check optional argument
if [ -n "$1" ]; then
    latestEdition=$1
else
    # Read the folder contents, one per line, sorted alphabetically, filtered to match routing editions, getting last one
    latestEdition=`ls -1 ${importMachineEditions} | grep "^routing\([0-9]\)\{6\}$" | tail -n1`
fi


# Abandon if not found
if [ -z "${latestEdition}" ]; then
    echo "Error: No editions found in ${importMachineEditions}"
    exit 1
fi

# Double-check the routing edition format is correct
if [[ ! "${latestEdition}" =~ routing([0-9]{6}) ]]; then
    echo -e "#\tThe edition: ${latestEdition} does not match the expected pattern routingYYMMDD."
    exit 1
fi


# Check (at least one of) the files exist
if [ ! -e ${importMachineEditions}/${latestEdition}/graph/legDetail.tsv ]; then
    # This usually happens if trying re reinstall.
    echo "Error: TSV files missing in: ${importMachineEditions}/${latestEdition}/graph"
    exit 1
fi

# Check this edition is not already installed
if [ -d ${websitesContentFolder}/data/routing/${latestEdition} ]; then

    # Report
    echo "#	Edition ${latestEdition} is already installed."
    echo "#	-------------------------------------------"
    echo "#	This is blocking moving the new edition into the target folder."
    echo "#	This folder needs to be moved or deleted before retrying:"
    echo "#		${websitesContentFolder}/data/routing/${latestEdition}"
    echo "#	Very old advice not checked recently:"
    echo "#		... but note that may not be necessary if a new import has just updated that location:"
    echo "#		sudo /bin/systemctl start cyclestreets"
    echo "#		Then switch routing service use: ${ScriptHome}/live-deployment/switch-routing-edition.sh ${latestEdition}"
    echo "#"
    echo "#	Carrying on regardless!"
    echo "#	-------------------------------------------"
    echo "#	By setting: set +e"
    set +e
fi

#	Load nearest point stored procedures
echo "#	Loading nearestPoint technology"
${superMysql} ${latestEdition} < ${websitesContentFolder}/documentation/schema/nearestPoint.sql

# Build a limited photo index
echo "#	$(date)	Building a limited photosEnRoute index"
${superMysql} ${latestEdition} < ${websitesContentFolder}/documentation/schema/photosEnRoute.sql
${superMysql} ${latestEdition} -e "call indexPhotos(100);"


#	Report finding
echo "#	Installing latest edition: ${latestEdition}"

# Move the folder
mv ${importMachineEditions}/${latestEdition} ${websitesContentFolder}/data/routing

# Create a symlink to the installed edition - this allows remote machines to install this edition
# Ensure the link does not yet already exist (which would create the link within itself)
if [ ! -L "${importMachineEditions}/${latestEdition}" ]; then
    ln -s ${websitesContentFolder}/data/routing/${latestEdition} ${importMachineEditions}/${latestEdition}
fi

# Add the new row to the map_edition table
if ! ${superMysql} --batch --skip-column-names -e "call addNewEdition('${latestEdition}')" cyclestreets
then
    echo "#	There was a problem adding the new edition: ${latestEdition}. The import has not completed."
    exit 1
fi


# Create a file that indicates the end of the script was reached - this can be tested for by the switching script
touch "${websitesContentFolder}/data/routing/${latestEdition}/installationCompleted.txt"

# Report completion and next steps
echo "#	$(date) Installation completed."
echo "#	To switch routing service use:"
echo "#		${ScriptHome}/live-deployment/switch-routing-edition.sh ${latestEdition}"

# Remove the lock file - ${0##*/} extracts the script's basename
) 9>$lockdir/${0##*/}

# End of file
